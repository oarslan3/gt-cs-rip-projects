#LyX 1.6.4 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
CS8803 RIP Project 2: Motion Planning with RST
\end_layout

\begin_layout Author
Oktay Arslan, Alex Cunningham, Philip Rogers
\end_layout

\begin_layout Part
Rapidly Exploring Random Trees
\end_layout

\begin_layout Section
Planner Implementations
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Describe how the implementations work here
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Goal-Biased RRT (
\begin_inset Quotes eld
\end_inset

Greedy
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Standard
In our goal-based RRT, we grow the tree in two ways: 
\end_layout

\begin_layout Enumerate
Random tree growth, as the classic RRT performs.
 New branches are created in random directions.
\end_layout

\begin_layout Enumerate
Biased tree growth, where new branches are made towards the direction of
 the goal.
\end_layout

\begin_layout Standard
The tradeoff between these two steps is governed by a greediness parameter,
 where higher values reduce the 
\begin_inset Quotes eld
\end_inset

breadth
\begin_inset Quotes erd
\end_inset

 of the tree in exchange for a tree grown directly towards the goal.
 Tuning this greediness parameter is important, as a high value may become
 trapped at an obstacle, but lower values are wasteful in that they may
 not grow towards the goal at every step.
\end_layout

\begin_layout Subsection
Bi-Directional RRT
\end_layout

\begin_layout Standard
Our bi-directional RRT is heavily based on the bi-directional algorithm
 presented in 
\begin_inset Quotes eld
\end_inset

Randomized Kinodynamic Planning
\begin_inset Quotes erd
\end_inset

 by LaValle and Kuffner.
 The extension to the classical RRT is to grow two trees towards each other.
 We do this by growing one tree (randomly, greedily, or using RRT Connect)
 and then grow the second tree towards the newest branch of the first tree
 (the 
\begin_inset Quotes eld
\end_inset

frontier
\begin_inset Quotes erd
\end_inset

.) We then do the same procedure, but starting with the second RRT, instead
 of the first.
 Because we have the option to use RRT Connect, our algorithm slightly differs
 from the bi-directional RRT presented by LaValle and Kuffner.
 As expected, we found the RRT Connect variant to perform well in scenarios
 where there are no or few obstacles.
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Standard
Below are the results for our RTT experiment 
\begin_inset Quotes eld
\end_inset

ChairLamp
\begin_inset Quotes erd
\end_inset

 (DESKTOP-ARM-FINAL.rscene):
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Greedy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Connect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bi-Dir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Path Length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tree Size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
67/67/67
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0/0/0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
67/67/67
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
83/90/87
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
52/57/54
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
54/58/53
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
66/66/66
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0/0/0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
67/67/67
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
93/91/90
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
235/240/240
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
237/242/242
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename chairlamp.png
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
Below are the results for our RTT experiment 
\begin_inset Quotes eld
\end_inset

FeedBear
\begin_inset Quotes erd
\end_inset

 (maze3.rscene):
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Greedy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Connect
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bi-Dir
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Path Length
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Iterations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tree Size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
137/139/139
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
877/1586/809
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
240/327/181
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
147/245/142
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1372/1851/1041
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
230/373/165
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
120/DNS/120
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
860/DNS/1610
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
281/DNS/535
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DNS/DNS/DNS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DNS/DNS/DNS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DNS/DNS/DNS
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename feedbear.png
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Performance
\end_layout

\begin_layout Standard
In general, our results show that the bi-directional RRT using RRT Connect
 is superior to all other variants.
 Without RRT Connect, the bi-directional approach is still the winner, on
 average.
\end_layout

\begin_layout Standard
In terms of finding a solution at all, the bi-directional approach seems
 to be the most important.
 In particular, the bi-directional RRT is able to find plans in scenarios
 where the goal is blocked by an obstacle; a situation where the goal-baised
 RRT may not find a solution at all.
 One interesting point we noticed is that the non-bi-directional RRT iteration
 level was very sporatic in the FeedBear experiment: if it got 
\begin_inset Quotes eld
\end_inset

lucky
\begin_inset Quotes erd
\end_inset

 initially, a plan was easy to find, but if it didn't get lucky, no solution
 would be found.
 We think this is because the bi-directional RRT is better at growing 
\begin_inset Quotes eld
\end_inset

around
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

out
\begin_inset Quotes erd
\end_inset

 of obstacles than a vanilla RRT.
 Consider the example below, that shows a goal-biased RRT and a bi-directional
 RRT:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename rrt_vs_birrt.eps
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
For a real example of the above scenario, we built the following scenario
 which the non-bi-directional RRTs were not able to solve:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename schunkstuck.png
	width 100line%

\end_inset


\end_layout

\begin_layout Standard
In terms of the speed of the planner (number of iterations), the bi-directional
 RRT is similar to the goal-baised RRT, except when the goal-baised RRT
 cannot find a solution.
 This is somewhat to be expected, as the bi-directional approach is similar
 to the goal-biased, except that it grows from two trees.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
On similarly constructed problems, compare the performance of goal-biased
 and bi-directional RRTs.
 Which planner was the fastest? Why? 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Solution Quality
\end_layout

\begin_layout Standard
One measure of the quality of the plan generated (beyond being able to generate
 a plan at all) is the path length.
 The rationale behind this is that longer paths are wasteful and less 
\begin_inset Quotes eld
\end_inset

direct.
\begin_inset Quotes erd
\end_inset

 In our tests, the use of RRT Connect was one of the largest factors, where
 RRT Connect generally reduced the path length.
 It is interesting to note that the bi-directional RRT generally produced
 poorer paths than the goal-biased RRT.
 We think that this may be because the one of the bi-directional trees would
 sometimes grow away from the line-of-site solution, but the RRT would find
 a complete path using the second tree.
\end_layout

\begin_layout Standard
A second measure of the quality of the plan generated is the smoothness
 of the path.
 This is more quantitative, but RRT Connect strongly determined how 
\begin_inset Quotes eld
\end_inset

straight
\begin_inset Quotes erd
\end_inset

 the plan is.
 The bi-directional RRT seemed to produce very jerky paths.
 We expand on the smoothness of paths in Part II, below.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Which planner resulted in the ”best” solutions? What does best mean? What
 makes a given planner perform better? Submit videos of each of the two
 planners in scenes of your choice that demonstrate difficult tasks for
 the robot.
 
\end_layout

\end_inset


\end_layout

\begin_layout Part
Broader Goals in Motion Planning
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
Our final goal is to develop a maze-solving robot using RRTs, and compare
 the results of our various RRT variants (goal-based RRT, bi-directional
 RRT, RRT Connect).
 To achieve this goal, we implemented three of the suggested subprojects
 of the assignment:
\end_layout

\begin_layout Enumerate
Robot Construction: We created two new robots for solving our mazes.
\end_layout

\begin_layout Enumerate
Mobile Manipulation: Our two robots are going places and doing stuff! Our
 mazes require more than just getting the robot from one place to another:
 we use both the robot's movement and the robot's manipulators to reach
 a goal.
\end_layout

\begin_layout Enumerate
Path Optimization: The paths generated in our vanilla RRT are not smooth.
 We implemented two methods to improve our paths: path shortening, and spline-ba
sed smoothing.
\end_layout

\begin_layout Subsection
Robot Construction
\end_layout

\begin_layout Standard
We built two maze solving robots: AMazeBot and AMazeHelicopter.
 In addition, we built a variety of mazes for them to solve, which include
 dead ends and places that only the manipulators can reach.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename bothrobots.png
	width 100text%

\end_inset


\end_layout

\begin_layout Standard
MIT recently showed the indoor autonomous navigation of quadrotor helicopters
 and our project of indoor maze solving is based on this idea.
 AMazeHelicopter features a Schunk manipulator bolted to an ultralilght
 quad-roter helicopter.
 The flying component is based off of Ascending Technology's ultralight
 (5.3kg) X-3D-BL quad-rotor helicopter.
 The manipulator is an 18.7kg Schunk arm and is attached to the bottom of
 the helicopter.
 To reduce weight, we did not include the Schunk gripper.
 As suggested in the project description, we used two prismatic joints for
 the translation of the helicopter, which is roughly consistent with the
 helicopter's real motion.
\end_layout

\begin_layout Standard
AMazeBot is a Schunk arm bolted to a segway base, similar to Golem.
 It has two prismatic joints, which do not correctly model the physics of
 the robot, but which can be used to generate paths.
 The paths generated using AMazeBot show situations where the robot moves
 horizontally (against the direction of the wheels) which is something we
 would fix if we had additional time.
\end_layout

\begin_layout Subsection
Mobile Manipulation
\end_layout

\begin_layout Standard
Our task is to solve mazes using RRTs which involve both the mobile robot
 and the use of a manipulator.
 The goal in most of our mazes is to get the robot through the maze and
 get the manipulator into a given configuration (such as through a small
 window.) 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename solvemaze.png
	width 100text%

\end_inset


\end_layout

\begin_layout Subsection
Path Optimization
\end_layout

\begin_layout Standard
The paths generated from the RRT are generally not smooth.
 We use two methods for path optimization:
\end_layout

\begin_layout Enumerate
Path shortening: We remove intermediate configurations in the path that
 do not cause collisions.
\end_layout

\begin_layout Enumerate
Path smoothing: We use splines to smooth the overall path.
\end_layout

\begin_layout Standard
We found that the two methods, combined, generated both better paths (shorter)
 and more realistic paths (natural looking.)
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Standard
Our project primarily deals with the mobile manipulation and path optimization
 components from above.
 
\end_layout

\begin_layout Standard
The mobile manipulation results are relatively good for simple mazes, but
 require a large amount of parameter knob turning to work with complex mazes.
 A difficulty for using RTTs to solve mazes is that obstacles in configuration
 space are very different from obstacles in joint space.
 We noticed that the RTTs would get 
\begin_inset Quotes eld
\end_inset

stuck
\begin_inset Quotes erd
\end_inset

 on long, thin walls no matter which variant of the RTT we used.
 This is because a goal on one side of the wall is very similar to a goal
 on the other, and the RTTs take a very long time (if ever) to determine
 that one of the translational prismatic joints must be moved way up, then
 way down to get around the obstacle.
 To get around this, we chose to use large, convex obstacles in our mazes,
 where possible.
\end_layout

\begin_layout Standard
The path optimization...
 [NEED TO DO THIS SECTION]
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
For each of the extensions you perform, summarize your experiences and findings.
 Discuss the challenges you faced and how you overcame them.
 Describe the performance of your algorithms and any particularly interesting
 results.
 Conclude with what you would have done to improve your extension if you
 could stop the hands of time.
 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Section
Conclusions
\end_layout

\end_body
\end_document
